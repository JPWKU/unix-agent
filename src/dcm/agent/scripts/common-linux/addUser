#!/usr/bin/env bash


set -u
PATH=/bin:${PATH}

BASENAME=`basename $0`
DIRNAME=`dirname $0`
. "$DIRNAME/common_mod"

logTag="addUser"
LOGGER=$DIRNAME/log

echo "running ${@}" | $LOGGER
if [ $# -lt 5 ] ; then 
   echo "Syntax: addUser CUST_ID USER_ID FIRST_NAME LAST_NAME ADMINISTRATOR SSHKEY_FILE" 2>&1 | $LOGGER -t "$logTag"
   exit 1
fi

$LOGGER -t "$logTag" addUser "${1} ${2} ${3} ${4} ${5}"

if [ -f /usr/sbin/useradd ] ; then
	USERADD=/usr/sbin/useradd
elif [ -f /usr/local/sbin/useradd ] ; then
	USERADD=/usr/local/sbin/useradd
else
	$LOGGER -t "$logTag" Could not find user addition command 
	exit 80
fi

if [ -f /usr/sbin/usermod ] ; then
	USERMOD=/usr/sbin/usermod
elif [ -f /usr/local/sbin/usermod ] ; then
	USERMOD=/usr/local/sbin/usermod
else
	echo "Could not find user mod command" 2>&1 | $LOGGER -t "$logTag"
	exit 81
fi

if [ -f /usr/sbin/groupadd ] ; then
	GROUPADD=/usr/sbin/groupadd
elif [ -f /usr/local/sbin/groupadd ] ; then
	GROUPADD=/usr/local/sbin/groupadd
else
	echo "Could not find group add command" 2>&1 | $LOGGER -t "$logTag"
	exit 82
fi

BASENAME=`basename $0`

CUST_ID=${1}
USER_ID=${2}
FIRST_NAME=${3}
LAST_NAME=${4}
ADMINISTRATOR=${5}

if [ $# -gt 5 ] ; then
    SSH_KEY_FILE=${6}
else
    SSH_KEY_FILE=""
fi

id ${USER_ID} 2> /dev/null
if [ $? == 0 ] ; then
	exists=1
else
	exists=0
fi

echo "LOG FILE=$DCM_LOG_FILE"

sudo "$GROUPADD" ${CUST_ID} 2>&1
ret=$?
if [ $ret -ne 9 -a $ret -ne 0 ]; then
        $LOGGER -t "$logTag" "Group add failed. Exit code: ${ret}"
        exit $ret
fi

if [ $exists == 0 ] ; then
        sudo ${USERADD} -d /home/${USER_ID} -g ${CUST_ID} -s /bin/bash -c "${FIRST_NAME} ${LAST_NAME}" -m ${USER_ID} 2>&1 | $LOGGER -t "$logTag"
fi

if [ ${ADMINISTRATOR} == "true" ] ; then
	sudo ${USERMOD} -G $DCM_USER ${USER_ID} 2>&1
	ret=$?
	if [ $ret -ne 0 ]; then
	    echo "User add of ${USER_ID} to dcm group failed."
	    exit $ret
	fi
	if [ -d /etc/sudoers.d ]; then
		# For distros that have the latest sudo package which uses sudoers.d directory.
		echo "${USER_ID} ALL=(ALL) NOPASSWD: ALL" > /tmp/${USER_ID}-sudoer
		sudo chown root:root /tmp/${USER_ID}-sudoer
		sudo chmod 0440 /tmp/${USER_ID}-sudoer
		sudo mv /tmp/${USER_ID}-sudoer /etc/sudoers.d/${USER_ID}
	elif [ -f /etc/sudoers ]; then
		# For distros that do not have the latest sudo package.
		sudo sed -i "/${USER_ID}/d" /etc/sudoers
		sudo sed -i "$ a\\${USER_ID} ALL=(ALL) NOPASSWD: ALL" /etc/sudoers
	fi
fi

if [ ! -f "/home/${USER_ID}/.ssh" ] ; then
	sudo mkdir /home/${USER_ID}/.ssh 2>&1 | $LOGGER -t "$logTag"
fi
sudo chown ${USER_ID}:${CUST_ID} /home/${USER_ID}/.ssh 2>&1 | $LOGGER -t "$logTag"
sudo chmod 700 /home/${USER_ID}/.ssh 2>&1 | $LOGGER -t "$logTag"

ret=0
if [ "X${SSH_KEY_FILE}" != "X" ]; then
    cat ${SSH_KEY_FILE} | sudo tee -a /home/${USER_ID}/.ssh/authorized_keys
    sudo chown ${USER_ID}:${CUST_ID} /home/${USER_ID}/.ssh/authorized_keys 2>&1 | $LOGGER -t "$logTag"
    sudo chmod 600 /home/${USER_ID}/.ssh/authorized_keys 2>&1
    ret=$?
fi

if [ -e /etc/selinux/ ]; then
    if [ $(id -Z) ]; then
        if [ -x /sbin/restorecon ]; then
            sudo /sbin/restorecon -R /home/${USER_ID}
            if [ $? -eq 0 ]; then
                $LOGGER -t "$logTag" "SELinux context configured on /home/${USER_ID}"
            else
                $LOGGER -t "$logTag" "Failed to configure SELinux context."
                exit 50
            fi
        else
            $LOGGER -t "$logTag" "SELinux detected but couldn't run restorecon to configure SELinux context."
        fi
    fi
fi

exit $ret
