#!/usr/bin/env bash

# Copyright 2011-2013 Enstratius Networks, Inc.
#
# configureService - Manages the configuration of a newly deployed service.
# 
# This software is part of the Enstratius Cloud Management System. Only 
# authorized licensees of Enstratius may use this software and only
# in the context of Enstratius-managed virtual servers and machine images. 
# Unauthorized copying or distribution of this software is strictly prohibited.
# Authorized licensees may copy this software onto any machine images
# and/or virtual hosts being managed by the Enstratius system as needed.
#
# FUNCTION
# This script really does nothing except kick-off the service-specific configuration.
#

set -u

BASENAME=`basename $0`
DIRNAME=`dirname $0`
. "$DIRNAME/common_mod"

LOGGER=$DIRNAME/log
logTag="configureService"

$LOGGER -t "$logTag" "$@"

if [ $# -lt 3 ] ; then
   $LOGGER -t "$logTag" "Syntax: configureService USER_ID CUSTOMER_ID SERVICE_ID [SSL_ADDRESS] [CERT_FILE_PATH] [KEY_FILE_PATH] [CHAIN_FILE_PATH]"
   exit 1
fi

case  $#  in  #check the number of command line arguments, fail if there is an invalid number of arguments, otherwise assign variables
  3)  USER_ID=$1
      CUSTOMER_ID=$2
      SERVICE_ID=$3;;
  6)  USER_ID=$1
      CUSTOMER_ID=$2
      SERVICE_ID=$3
      SSL_ADDRESS=$4
      CERT_FILE_PATH=$5
      KEY_FILE_PATH=$6;;
  7)  USER_ID=$1
      CUSTOMER_ID=$2
      SERVICE_ID=$3
      SSL_ADDRESS=$4
      CERT_FILE_PATH=$5
      KEY_FILE_PATH=$6
      CHAIN_FILE_PATH=$7;;
  *)  $LOGGER -t "$logTag" "$# is an invalid number of arguments"
	  exit 3;; #exit with failure status
esac


CONFIGURE="$DCM_SERVICES_DIR/${SERVICE_ID}/bin/enstratus-configure"
PROPS="$DCM_SERVICES_DIR/${SERVICE_ID}/cfg/enstratus.cfg"

if [ -r "$PROPS" ] ; then
	sudo bash -c "tr -d '\015' < $PROPS > ${PROPS}.tmp && mv ${PROPS}.tmp $PROPS"
        sudo chown ${USER_ID}:$DCM_USER "$PROPS"
        sudo chmod 640 "$PROPS"
fi

if [ -e "$CONFIGURE" ] ; then
  case  $#  in  #check the number of command line arguments, fail if there is an invalid number of arguments, otherwise assign variables
    3) sudo "$CONFIGURE" $SERVICE_ID "$PROPS" 2>&1 | $LOGGER -t "$logTag";;
    6) sudo "$CONFIGURE" $SERVICE_ID "$PROPS" $SSL_ADDRESS $CERT_FILE_PATH $KEY_FILE_PATH 2>&1 | $LOGGER -t "$logTag";;
    7) sudo "$CONFIGURE" $SERVICE_ID "$PROPS" $SSL_ADDRESS $CERT_FILE_PATH $KEY_FILE_PATH $CHAIN_FILE_PATH 2>&1 | $LOGGER -t "$logTag";;
  esac
fi

exit_with_pipe_value
