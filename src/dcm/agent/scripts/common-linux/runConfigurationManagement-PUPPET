#!/usr/bin/env bash

set -u

DIRNAME=`dirname $0`
. "$DIRNAME/common_mod"
BASENAME=`basename $0`

logTag="runConfigurationManagement-PUPPET"
LOGGER=$DIRNAME/log

PUPPET_MASTER=$1
CERT_FILE_PATH=$2
KEY_FILE_PATH=$3
NODE_NAME=$4
EXTRAS_PATH=$5
PUPPET_TEMP_CONF_PATH=$6
PUPPET_CONF_DIR=$EXTRAS_PATH/puppetconf
PUPPET_BIN=$EXTRAS_PATH/bin/puppet
CERT_DIR=$PUPPET_CONF_DIR/ssl/certs/
KEY_DIR=$PUPPET_CONF_DIR/ssl/private_keys/
$LOGGER -t "$logTag" "Running configuration management for Puppet..."
export PATH=$EXTRAS_PATH/bin:$EXTRAS_PATH/embedded/bin:$PATH
puppet_stdfile=`mktemp -q /tmp/dcmagentpuppetrun.XXXXXX`

# we need to test if the passed puppetmaster is an IP or hostname
echo "$PUPPET_MASTER" | grep -E '\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4}\b'
IS_IP=$?
if [[ $IS_IP == 0 ]]; then
  $LOGGER -t "$logTag" "Detected $PUPPET_MASTER as an IP address. Adding hosts file entry"
  # This should be changed before release
  echo "$PUPPET_MASTER puppet puppetmaster-dev puppetmaster" | sudo tee -a /etc/hosts
  # debug to check hosts file
  $LOGGER -t "$logTag" "Checking hosts file"
  while read line;do $LOGGER -t "$logTag" "$line"; done </etc/hosts
  PUPPET_MASTER="puppet"
fi

if [ ! -d ${CERT_DIR} ]; then
  $REAL_SUDO mkdir -p ${CERT_DIR} > /dev/null 2>&1
fi
if [ ! -d ${KEY_DIR} ]; then
  $REAL_SUDO mkdir -p ${KEY_DIR} > /dev/null 2>&1
fi

# Copy the client cert into place
$REAL_SUDO cp ${CERT_FILE_PATH} ${CERT_DIR}/${NODE_NAME}.pem > /dev/null 2>&1
EXIT=$?
if [[ $EXIT != 0 ]]; then
    $LOGGER -t "$logTag" "Failed to copy the cert file: $EXIT"
    exit 90
fi

# Copy the client key into place
$REAL_SUDO cp ${KEY_FILE_PATH} ${KEY_DIR}/${NODE_NAME}.pem > /dev/null 2>&1
EXIT=$?
if [[ $EXIT != 0 ]]; then
    $LOGGER -t "$logTag" "Failed to copy the key file: $EXIT"
    exit 91
fi

$REAL_SUDO cp ${PUPPET_TEMP_CONF_PATH} ${PUPPET_CONF_DIR} > /dev/null 2>&1
EXIT=$?
if [[ $EXIT != 0 ]]; then
    $LOGGER -t "$logTag" "Failed to copy the key file: $EXIT"
    exit 92
fi

$REAL_SUDO -i ${PUPPET_BIN} agent --confdir $PUPPET_CONF_DIR --onetime --no-daemonize --detailed-exitcodes --logdest=$DCM_TMP_DIR/es-puppet-firstrun.log > $puppet_stdfile 2>&1
EXIT=$?

if [ -s $puppet_stdfile ]; then
    while read line; do $LOGGER -t "$logTag" "$line"; done <$puppet_stdfile
fi
if [[ $EXIT == 4 || $EXIT == 6 || $EXIT == 1 ]]; then
  $LOGGER -t "$logTag" "Initial puppet run failed: $EXIT"
  if [ -e $DCM_TMP_DIR/es-puppet-firstrun.log ]; then
    while read line; do $LOGGER -t "$logTag" "$line"; done <$DCM_TMP_DIR/es-puppet-firstrun.log
  fi
  exit 99
fi

if [ -e $DCM_TMP_DIR/es-puppet-firstrun.log ]; then
  while read line; do $LOGGER -t "$logTag" "$line"; done <$DCM_TMP_DIR/es-puppet-firstrun.log
fi
$LOGGER -t "$logTag" "Finished running configuration management for Puppet."
