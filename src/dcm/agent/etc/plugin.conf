[default]

[plugin:add_user]
type: python_module
module_name: dcm.agent.jobs.builtin.add_user
script_name: addUser

[plugin:backup_data_source]
type: python_module
module_name: dcm.agent.jobs.builtin.backup_data_source
script_name: backupDataSource
longer_runner: true

[plugin:backup_service]
type: python_module
module_name: dcm.agent.jobs.builtin.backup_service
script_name: backupService
longer_runner: true

[plugin:configure_server.*]
type: python_module
module_name: dcm.agent.jobs.builtin.configure_server
longer_runner: true

[plugin:get_agent_data]
type: python_module
module_name: dcm.agent.jobs.builtin.get_agent_data

[plugin:get_job_description]
type: python_module
module_name: dcm.agent.jobs.builtin.get_job_description
immediate: true

[plugin:get_private_ip_address]
type: python_module
module_name: dcm.agent.jobs.builtin.get_private_ip_address
script_name: getIpAddresses

[plugin:get_service_states]
type: python_module
module_name: dcm.agent.jobs.builtin.get_service_states
script_name: checkService

[plugin:heartbeat]
type: python_module
module_name: dcm.agent.jobs.builtin.heartbeat

[plugin:initialize]
type: python_module
module_name: dcm.agent.jobs.builtin.initialize

[plugin:install_data_source]
type: python_module
module_name: dcm.agent.jobs.builtin.install_data_source
script_name: installDataSource
longer_runner: true

[plugin:install_service]
type: python_module
module_name: dcm.agent.jobs.builtin.install_service
script_name: installService
longer_runner: true

[plugin:list_devices]
type: python_module
module_name: dcm.agent.jobs.builtin.list_devices
script_name: listDevices

[plugin:lock]
type: python_module
module_name: dcm.agent.jobs.builtin.lock

[plugin:mount_volume]
type: python_module
module_name: dcm.agent.jobs.builtin.mount_volume
script_name: mount
longer_runner: true

[plugin:remove_user]
type: python_module
module_name: dcm.agent.jobs.builtin.remove_user
script_name: removeUser

[plugin:rename]
type: python_module
module_name: dcm.agent.jobs.builtin.rename
script_name: rename

[plugin:run_script]
type: python_module
module_name: dcm.agent.jobs.builtin.run_script

[plugin:start_service]
type: python_module
module_name: dcm.agent.jobs.builtin.start_service
script_name: startService

[plugin:start_services]
type: python_module
module_name: dcm.agent.jobs.builtin.start_services
script_name: startService

[plugin:stop_service]
type: python_module
module_name: dcm.agent.jobs.builtin.stop_service
script_name: stopService

[plugin:terminate]
type: python_module
module_name: dcm.agent.jobs.builtin.terminate
script_name: terminate

[plugin:unlock]
type: python_module
module_name: dcm.agent.jobs.builtin.unlock

[plugin:unmount_volume]
type: python_module
module_name: dcm.agent.jobs.builtin.unmount_volume
script_name: unmount

[plugin:upgrade]
type: python_module
module_name: dcm.agent.jobs.builtin.upgrade

[plugin:docker_create_container]
type: python_module
module_name: dcmdocker.create_container

[plugin:docker_delete_container]
type: python_module
module_name: dcmdocker.delete_container

[plugin:docker_start_container]
type: python_module
module_name: dcmdocker.start_container

[plugin:docker_stop_container]
type: python_module
module_name: dcmdocker.stop_container

[plugin:docker_top_container]
type: python_module
module_name: dcmdocker.top_container

[plugin:docker_restart_container]
type: python_module
module_name: dcmdocker.restart_container

[plugin:docker_list_containers]
type: python_module
module_name: dcmdocker.list_containers

[plugin:docker_list_images]
type: python_module
module_name: dcmdocker.list_images

[plugin:docker_delete_image]
type: python_module
module_name: dcmdocker.delete_image

[plugin:docker_import_image]
type: python_module
module_name: dcmdocker.import_image

[plugin:docker_host]
type: python_module
module_name: dcmdocker.is_docker_host

[plugin:docker_get_container_details]
type: python_module
module_name: dcmdocker.get_container_details

[plugin:docker_pull_repo]
type: python_module
module_name: dcmdocker.pull_repo

[plugin:docker_get_logs]
type: python_module
module_name: dcmdocker.get_logs_in_container
