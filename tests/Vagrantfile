Vagrant.configure("2") do |config|

  config.vm.synced_folder "../omnibus-dcm-agent/pkg/", "/agent/pkgs"
  config.vm.synced_folder "../src/", "/agent/src"
  vagrant_root = File.dirname(__FILE__)
  vagrant_root = File.dirname(vagrant_root)
  config.vm.synced_folder "../", vagrant_root

  config.vm.define 'ubuntu-10.04-386' do |c|
    c.vm.hostname="ubuntu-1004-386"
    c.vm.box = "opscode-ubuntu-10.04-386"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-10.04-i386_chef-provisionerless.box"

    ES_PACKAGE = "/agent/pkgs/default-ubuntu-1004-386/"
    ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    ES_SECOND_CONTROLLER = "IDE Controller"
    ES_DISK_PATH = "/tmp/ubuntu-1004-386.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#ES_PACKAGE", "#ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-10.04' do |c|
    c.vm.hostname="ubuntu-1004-amd64"
    c.vm.box = "opscode-ubuntu-10.04"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-10.04_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1004/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1004.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-11.04' do |c|
    c.vm.hostname="ubuntu-1104-amd64"
    c.vm.box = "opscode-ubuntu-11.04"
    c.vm.box_url = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-11.04_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1004/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1104.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-11.04-386' do |c|
    c.vm.hostname="ubuntu-1104-386"
    ES_SECOND_CONTROLLER = "SATA Controller"
    c.vm.box = "ubuntu-11.04-386"
    c.vm.box_url = "http://dl.dropbox.com/u/7490647/talifun-ubuntu-11.04-server-i386.box"
  end

  config.vm.define 'ubuntu-12.04' do |c|
    c.vm.hostname="ubuntu-1204-amd64"
    c.vm.box = "opscode-ubuntu-12.04-amd64"
    c.vm.box_url = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-12.04_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1204/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1204.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-12.04-386' do |c|
    c.vm.hostname="ubuntu-1204-386"
    c.vm.box = "opscode-ubuntu-12.04-386"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-12.10-i386_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1204-386/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1204-386.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-13.04' do |c|
    c.vm.hostname="ubuntu-1304-amd64"
    c.vm.box = "opscode-ubuntu-13.04-amd64"
    c.vm.box_url = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-13.04_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1304/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1304.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-13.04-386' do |c|
    c.vm.hostname="ubuntu-1304-386"
    c.vm.box = "opscode-ubuntu-13.04-386"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-13.10-i386_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1304-386/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1304-386.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-14.04' do |c|
    c.vm.hostname="ubuntu-1404-amd64"
    c.vm.box = "opscode-ubuntu-14.04-amd64"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1404/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1404.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'ubuntu-14.04-386' do |c|
    c.vm.hostname="ubuntu-1404-386"
    c.vm.box = "opscode-ubuntu-14.04-386"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04-i386_chef-provisionerless.box"

    $ES_PACKAGE = "/agent/pkgs/default-ubuntu-1404-386/"
    $ES_STORAGE_CREDS = ENV['DCM_AGENT_STORAGE_CREDS']
    $ES_SECOND_CONTROLLER = "IDE Controller"
    $ES_DISK_PATH = "/tmp/ubuntu-1404-386.disk"
    config.vm.provision :shell do |shell|
      shell.inline = "/vagrant/test-distro.sh $1"
      shell.args = ["#$ES_PACKAGE", "#$ES_STORAGE_CREDS"]
    end
  end

  config.vm.define 'centos-65' do |c|
    c.vm.box = "opscode-centos-6.5"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-6.5_chef-provisionerless.box"
    ES_SECOND_CONTROLLER = "SATA Controller"
  end

  config.vm.define 'centos-65-i386' do |c|
    c.vm.box = "opscode-centos-6.5-i386"
    c.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-6.5-i386_chef-provisionerless.box"
    ES_SECOND_CONTROLLER = "SATA Controller"
  end

  config.vm.provider "virtualbox" do |v|
    v.customize [ "createhd", "--filename", "#$ES_DISK_PATH", "--size", 1000 ]
    v.customize ['storageattach', :id, '--storagectl', "#$ES_SECOND_CONTROLLER", '--port', 1, '--device', 0, '--type', 'hdd', '--medium', "#$ES_DISK_PATH"]
    v.memory = 1024
  end


end
